install.packages("Biocmanager")
install.packages("BiocManager")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny", dependencies = TRUE)
install.packages("shinydashboard")
install.packages("dplyr")
install.packages("vroom")
install.packages("shinyFeedback")
shiny::runApp('Documents/shinyproject')
install.packages("languageserver")
install.packages("lintr")
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
install.packages("colourpicker")
library(colourpicker)
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
sessionInfo()
install.packages("miniUI")
install.packages("miniUI")
library(stringr)
fruits <- ("banane", "pomme", "kiwi")
fruits <- c("banane", "pomme", "kiwi")
which(str_detect(fruits, "z"))
which(str_detect(fruits, "z")) == NULL
which(str_detect(fruits, "z")) == integer(0)
which(str_detect(fruits, "w"))
which(str_detect(fruits, "z")) == NaN
which(str_detect(fruits, "z")) %>% class != class(1)
class(1)
which(str_detect(fruits, "z")) %>% class != "numeric"
which(str_detect(fruits, "z")) %>% class
which(str_detect(fruits, "z"))
which(str_detect(fruits, "z")) == integer(0)
str_detect(nom_col, "symbol")
str_detect(fruits, "z")
a <- str_detect(fruits, "z")
all(!a)
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
?geom_label_repel
install.packages(ggrepel)
install.packages("ggrepel)
install.packages("ggrepel")
runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
res() %>% colnames
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
res()$symbol[genes_to_highlight,]
res()[genes_to_highlight,]
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
tmp
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?theme_set
themes_gg <- setNames(c(theme_classic(),
theme_gray(),
theme_bw()),
c("Classic",
"Gray",
"Classic with gridlines"))
ggplot(data = mtcars, aes(x = cyl, y = mpg)) +
geom_point()+
themes_gg[1]
ggplot(data = mtcars, aes(x = cyl, y = mpg)) +
geom_point()+
as.name(themes_gg[1])
themes_gg %>% class
themes_gg
themes_gg <- setNames(c("theme_classic()",
"theme_gray()",
"theme_bw()"),
c("Classic",
"Gray",
"Classic with gridlines"))
themes_gg
ggplot(data = mtcars, aes(x = cyl, y = mpg)) +
geom_point()+
as.name(themes_gg[1])
ggplot(data = mtcars, aes(x = cyl, y = mpg)) +
geom_point()+
themes_gg[1]
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?select_if
tmp <- vroom::vroom("~/Documents/shinyproject/NGS21-023_Resultats/Analyses_supervisees/NGS21-023_ensemblGCRm38r101_deseq2_results_contrast_High_vs_Controle.tsv",
delim = "\t")
tmp %>% select(-Row.names)
tmp %<>% select(-Row.names)
tmp <- tmp %>% select(-Row.names)
tmp %<>% select(-Row.names)
tmp %>% select(-Row.names)
tmp %>% select(-match(Row.names))
?matches
tmp %>% select(-matches(Row.names))
tmp %>% select(-matches("Row.names"))
colnames(tmp)
tmp %>% select(-matches("Row.names"))
tmp <- vroom::vroom("~/Documents/shinyproject/NGS21-023_Resultats/Analyses_supervisees/NGS21-023_ensemblGCRm38r101_deseq2_results_contrast_High_vs_Controle.tsv",
delim = "\t")
tmp %>% select(-matches("Row.names"))
runApp("~/Documents/shinyproject/")
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?guides
scale_fill_manual()
?scale_fill_manual
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
string_to_split <- ./NGS21-023_Resultats/Analyses_supervisees/NGS21-023_ensemblGCRm38r101_deseq2_results_contrast_High_vs_Controle.tsv""
string_to_split <- "./NGS21-023_Resultats/Analyses_supervisees/NGS21-023_ensemblGCRm38r101_deseq2_results_contrast_High_vs_Controle.tsv""
""
string_to_split <- "./NGS21-023_Resultats/Analyses_supervisees/NGS21-023_ensemblGCRm38r101_deseq2_results_contrast_High_vs_Controle.tsv"
str_split(string_to_split, pattern = "_")
str_sub(string_to_split, -4)
str_sub(string_to_split, end = -4)
str_sub(string_to_split, end = -5)
str_sub(string_to_split, end = -5) %>% str_split(., "_")
aaa <-str_sub(string_to_split, end = -5) %>% str_split(., "_")
which(aaa == "contrast" )
which(aaa == "contrast")
aaa == "contrast"
aaa[7] == "contrast"
aaa[7]
aaa[[1]][7]
which(aaa[[1]] == "contrast")
aaa[[1]] %>% length()
aaa[[1]][7:10]
unlist(aaa)
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
aaa <- unlist(aaa)
aaa %in% c("contrast", "blblbl")
aaa[aaa %in% c("contrast", "blblbl")]
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
class(aaa[aaa %in% c("contrast", "nboibob")])
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
reactlog::reactlog_enable()
reactlog_enable()
reactlog()
reactlog_enable()
?reactlog
options(shiny.reactlog = TRUE)
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
library(pheatmap)
?pheatmap
b<- c("a", "e", "a", "e", "f")
b %in% c("a", "e")
b[b %in% c("a", "e")]
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(colourpicker)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(tibble)
display.brewer.all()
?display.brewer.all()
display.brewer.all(colorblindFriendly = T, type = "seq")
brewer.pal.info
brewer.pal.info %>% filter(category = "seq") %>% rownames_to_column()
brewer.pal.info %>% filter(category == "seq") %>% rownames_to_column()
brewer.pal.info %>% filter(category == "seq") %>% rownames_to_column() %>% pull(rowname)
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
colnames(mtcars)
is.numeric(mtcars) %>% colnames()
is.numeric(mtcars)
which(is.numeric(mtcars))
mtcars %>% select(across(is.numeric))
mtcars %>% select(across(where(is.numeric)))
mtcars %>% dplyr::select(across(where(is.numeric)))
mtcars %>% dplyr::select((where(is.numeric))
)
?cor
source("~/Documents/debug_test/app.R", echo=TRUE)
runApp('Documents/debug_test/')
runApp('Documents/debug_test')
shiny::runApp('Documents/debug_test')
runApp('Documents/debug_test')
library(RColorBrewer)
RColorBrewer::display.brewer.all()
runApp('Documents/debug_test')
library(ggplot2)
runApp('Documents/debug_test')
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?png
?pdf
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp()
runApp('Documents/shinyproject')
capabilities()["cairo"]
?ragg
?ggsave
?selectInput
runApp('Documents/shinyproject')
?png_dev
?svglite
library(svglite)
requireNamespace("ragg")
runApp('Documents/shinyproject')
shiny::runApp('Documents/debug_test')
shiny::runApp('Documents/debug_test')
RColorBrewer::display.brewer.all()
shiny::runApp('Documents/debug_test')
runApp('Documents/debug_test')
?pheatmap
runApp('Documents/debug_test')
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?div
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?box
?box
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
source("~/Documents/shinyproject/server_heatmap.R", echo=TRUE)
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
res() %>%
filter(log2FoldChange > 1 | log2FoldChange < -1) %>%
slice_min(order_by = padj, n = input$nb_top_gene) %>%
select(all_of(echantillons)) %>%
as.matrix()
counts() %>%
filter(symbol %in% input$sel_gene_hm) %>%
column_to_rownames(var = "symbol") %>%
select(all_of(echantillons)) %>%
as.matrix()
heatmap_data()
annotation_col()
runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
BiocManager::install("ComplexHeatmap")
?circlize::colorRamp2()
library(ComplexHeatmap)
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?shiny
install.packages("fontawesome")
runApp('Documents/shinyproject')
devtools::install_version("shiny", version = "1.6.0", repos = "http://cran.us.r-project.org")
devtools::install_version("shiny", version = "1.6.0", repos = "http://cran.us.r-project.org")
library(shiny=)
library(shiny)
shiny::runApp("~/Documents/shinyproject/")
runApp('Documents/shinyproject')
?pheatmap
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
ann_col
unique(annotation_col())
setNames(unique(annotation_col()), cols)
cols <- brewer.pal(length(unique(annotation_col())), "Set2")
Q
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
length(unique(annotation_col()))
unique(annotation_col())
unique(annotation_col()) %>% nrow
setNames(unique(annotation_col()), cols)
cbind(annotation_col()), cols)
bind_cols(annotation_col()), cols)
bind_cols(annotation_col(), cols)
bind_cols(unique(annotation_col()), cols)
bind_cols(unique(annotation_col()), cols) %>% as.list
split(bind_cols(unique(annotation_col()), cols))
unique(annotation_col) %>% as.vector()
unique(annotation_col()) %>% as.vector()
unique(annotation_col()) %>% as.vector() %>% setNames(., cols)
cols
runApp('Documents/shinyproject')
source("~/Documents/shinyproject/server_heatmap.R", echo=TRUE)
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
RColorBrewer::display.brewer.pal(name = "Set2")
RColorBrewer::display.brewer.pal(9,name = "Set2")
RColorBrewer::display.brewer.pal(5757,name = "Set2")
runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
RColorBrewer::display.brewer.pal(5757,name = "Set2")
runApp('Documents/shinyproject')
?save
load(file = "~/Documents/shinyproject/gen_rds/results.RData")
colnames(dataMerged)
all_results
names(all_results)
names(rld)
?reactiveFileReader
load(file = "./gen_rds/results.RData")
load(file = "~/Documents/shinyproject/gen_rds/results.RData")
configuration
contrasteList
rld %>% names()
rld %>% colnames()
runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
head(heatmap_data())
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
shiny::runApp('Documents/shinyproject')
runApp('~/Documents/debug_test')
runApp('Documents/debug_test')
runApp('Documents/debug_test')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
shinyWidgets::sliderTextInput()
?shinyWidgets::sliderTextInput()
runApp('Documents/shinyproject')
RColorBrewer::display.brewer.all()
RColorBrewer::brewer.pal.info
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
?strsplit
strsplit("zeoijroei_zoeij_zoie", split = "_")
runApp('Documents/shinyproject')
a <- c("e", "eierjfo", "e")
paste(a)
BiocGenerics::paste(a)
paste("e", "eeoie")
paste(a, collapse = " ")
paste("e", "eeoie", a, collapse = " ")
runApp('Documents/shinyproject')
paste(c("e", "eeoie", a), collapse = " ")
?paste0
a<- "iuhiu_iu_uhiu"
paste(c("e", "eeoie", strsplit(a, "_")), collapse = " ")
runApp('Documents/shinyproject')
b <- strsplit(a, "_")
b
?strsplit
?as.vector
b %>% as.vector()
b %>% as.character()
b %>% unlist
paste(c("e", "eeoie", unlist(strsplit(a, "_"))), collapse = " ")
runApp('Documents/shinyproject')
?brewer.pal
runApp('Documents/shinyproject')
pc <- prcomp(iris[, -5])
pc
library(factoextra)
pc$x
pc$sdev
?qplot
ggplot(x = pc$sdev) + geom_bar()
ggplot(data = pc$sdev) + geom_bar()
ggplot(data = pc$sdev %>% as.data.frame()) + geom_bar()
pc$sdev %>% as.data.frame()
ggplot(data = pc$sdev %>% as.data.frame(), x = .) + geom_bar()
ggplot(data = pc$sdev %>% as.data.frame(), y = .) + geom_bar()
ggplot(data = pc$sdev %>% as.data.frame(), y = .) + geom_bar(stat = "identity")
variance <- as.data.frame(pc$sdev)
variance
ggplot(data = variance, y = pc$sdev) + geom_bar(stat = "identity")
ggplot(data = variance, y = pc$sdev, x = 1:nrow(variance)) + geom_bar(stat = "identity")
variance %<>% rownames_to_column()
ggplot(data = variance, y = pc$sdev, x = rownames) + geom_bar(stat = "identity")
ggplot(data = variance, aes(y = pc$sdev, x = rownames)) + geom_bar(stat = "identity")
variance
ggplot(data = variance, aes(y = pc$sdev, x = rowname)) + geom_bar(stat = "identity")
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
pca_data()$variance %>%
as.data.frame() %>%
rownames_to_column()
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyWidgets)
library(fresh)
library(magrittr)
library(dplyr)
library(tibble)
library(ggplot2)
library(ggrepel)
library(colourpicker)
library(stringr)
library(ComplexHeatmap) #remplace pheatmap qui bug, mais la fonction reste
library(RColorBrewer)
library(svglite)
library(ragg)
runApp('Documents/shinyproject')
runApp()
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
reactlog::reactlog_enable()
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
runApp('Documents/shinyproject')
setwd("~/Documents/shinyproject/R")
devtools::load_all(".")
